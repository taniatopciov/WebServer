plugins {
    id 'java'
    id 'jacoco'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

plugins {
    id "org.sonarqube" version "3.3"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceCompatibility = '16'
targetCompatibility = '16'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'main'
    mainClass = 'main.MainGUI'
}

javafx {
    version = '17.0.0.1'
    modules = ['javafx.controls', 'javafx.fxml']
}


sonarqube{
    properties{
        property 'sonar.projectName', 'WebServer'
        property 'sonar.projectKey', 'WebServer'
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.login', '2b5a90ed4a6c4bb2a360dbe321921b92ad66c994'
    }
}

dependencies {
    testImplementation('junit:junit:4.13')
    testImplementation "org.mockito:mockito-core:3.+"
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'commons-httpclient:commons-httpclient:3.1'

    implementation('org.controlsfx:controlsfx:11.1.0')
    implementation('com.dlsc.formsfx:formsfx-core:11.3.2') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation 'org.seleniumhq.selenium:selenium-java:3.9.0'
}

test {
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
}

jacoco {
    toolVersion = "0.8.7"
//    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}